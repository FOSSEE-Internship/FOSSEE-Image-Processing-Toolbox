<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from triangulatePoints.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="triangulatePoints" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>triangulatePoints</refname>
    <refpurpose>Returns the worldPoint coordinates of the feature points.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   points4D = triangulatePoints(projMat1, projMat2, points1, points2)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>projMat1:</term>
      <listitem><para> 3X4 projection matrix for the first Camera matrix</para></listitem></varlistentry>
   <varlistentry><term>projMat2:</term>
      <listitem><para> 3X4 projection matrix for the second Camera matrix</para></listitem></varlistentry>
   <varlistentry><term>points1:</term>
      <listitem><para> 2xN array of feature points in the 1st image. In case of c++ version it can be also a vector of feature points or two-channel matrix of size 1xN or Nx1</para></listitem></varlistentry>
   <varlistentry><term>points2:</term>
      <listitem><para> 2xN array of feature points in the 2nd image. In case of c++ version it can be also a vector of feature points or two-channel matrix of size 1xN or Nx1</para></listitem></varlistentry>
   <varlistentry><term>points4D:</term>
      <listitem><para> 4XN array or matrix of reconstructed points</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
Returns 4D location of the matched feature points from the two projected matrices. The 4D location of the feature points is reconstructed using triangulation.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
[projMat1] = [12 21 21 19; 34 12 0 2; 112 431 890 32.1]
[projMat2] = [16 17 32 1; 64 90 12 11; 123 43.5 895 9.8]
[points1] = [1 2 3 4;5 6 7 8]
[points2] = [32 1 3 5; 9 8 3 4]
[points4D] = triangulatePoints(projMat1, projMat2, points1, points2)

   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Deepshikha</member>
   </simplelist>
</refsection>
</refentry>
