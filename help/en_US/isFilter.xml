<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from isFilter.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="isFilter" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>isFilter</refname>
    <refpurpose>Decides if a filter is separable or not.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   [isFilter s u] = isFilter(filter, size);
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>filter:</term>
      <listitem><para> Input filter (datatype- mat(double)).</para></listitem></varlistentry>
   <varlistentry><term>size:</term>
      <listitem><para> Size of the filter.</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
This function uses SVD to compute if the filter is separable or not. It takes as input the
filter matrix and is the filter is separable it returns the calculated singular and the left
singular values.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
filter = [1 0; 0 1]; // Any matrix of dimensions n x n.
[isfilter] = isFilter(filter);

   ]]></programlisting>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
filter = [1 0; 0 1]; // Any matrix of dimensions n x n.
[isfilter s u] = isFilter(filter);

   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Siddhant Narang</member>
   </simplelist>
</refsection>
</refentry>
