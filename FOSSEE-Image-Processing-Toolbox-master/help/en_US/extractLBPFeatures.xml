<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from extractLBPFeatures.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="extractLBPFeatures" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>extractLBPFeatures</refname>
    <refpurpose>This function is used to extract features from an image.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   im = imread(image);
   feat = extractLBPFeatures(im);
   feat = extractLBPFeatures(im,name,value);
   feat = extractLBPFeatures(im,"NumNeighbors",NumNeighbors)
   feat = extractLBPFeatures(im,"NumNeighbors",NumNeighbors,"Radius",Radius)
   feat = extractLBPFeatures(im,"NumNeighbors",NumNeighbors,"Radius",Radius,"Upright",Upright)
   feat = extractLBPFeatures(im,"NumNeighbors",NumNeighbors,"Radius",Radius,"Upright",Upright,"Interpolation",Interpolation)
   feat = extractLBPFeatures(im,"NumNeighbors",NumNeighbors,"Radius",Radius,"Upright",Upright,"Interpolation",Interpolation,"CellSize",CellSize)
   feat = extractLBPFeatures(im,"NumNeighbors",NumNeighbors,"Radius",Radius,"Upright",Upright,"Interpolation",Interpolation,"CellSize",CellSize,"Normalization",Normalization)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>feat :</term>
      <listitem><para> Feature matrix returned by obtaining features from a particular image.</para></listitem></varlistentry>
   <varlistentry><term>cellsize :</term>
      <listitem><para> The size of the cell specified by the user for extractng features.</para></listitem></varlistentry>
   <varlistentry><term>NumNeighbors :</term>
      <listitem><para> It denotes the number of neighbors presnt across the vicinity of the central pixel.</para></listitem></varlistentry>
   <varlistentry><term>Radius :</term>
      <listitem><para> The radius of the circle on which the points correspond to image coordinates.</para></listitem></varlistentry>
   <varlistentry><term>Upright :</term>
      <listitem><para> Rotation invariance flag, specified as the comma-separated pair consisting of 'Upright' and a logical scalar. When you set this property to true, the LBP features do not encode rotation information. Set 'Upright' to false when rotationally invariant features are required.</para></listitem></varlistentry>
   <varlistentry><term>Interpolation :</term>
      <listitem><para>Interpolation method used to compute pixel neighbors, specified as the comma-separated pair consisting of 'Interpolation' and the character vector 'Linear' or 'Nearest'. Use 'Nearest' for faster computation, but with less accuracy.</para></listitem></varlistentry>
   <varlistentry><term>Normalization :</term>
      <listitem><para>Type of normalization applied to each LBP cell histogram, specified as the comma-separated pair consisting of 'Normalization' and the character vector 'L2' or 'None'. To apply a custom normalization method as a post-processing step, set this value to 'None'.</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
This function is used to extract features from an image by comparing pixel values between the central and neighbouring pixels,further , it stores the features in the form of a matrix and returns this matrix to the user.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
i1= imread('kevin.jpg',0);
i2= imread('air.jpg',0);
i3= imread('bike.jpg',0);
rr= extractLBPFeatures(i1);
rr1 = extractLBPFeatures(i2);
rr2 =extractLBPFeatures(i3);
   ]]></programlisting>
</refsection>
</refentry>
